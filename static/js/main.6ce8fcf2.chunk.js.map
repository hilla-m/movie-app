{"version":3,"sources":["model/ActorModel/ActorModel.js","model/MovieModel/MovieModel.js","logo.svg","components/ActorCard/ActorCard.js","components/Navbar/Navbar.js","pages/ActorsPage/ActorsPage.js","components/MovieCard/MovieCard.js","pages/MoviesPage/MoviesPage.js","pages/HomePage/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Actor","firstName","lastName","birthday","image","imdbLink","this","age","calcAge","Date","getFullYear","Movie","movieName","lengthInMinutes","poster","director","mainStars","ActorCard","actor","Card","className","Img","variant","src","Body","Title","href","target","Text","MyNavbar","props","Navbar","bg","Brand","Nav","Link","ActorsPage","actors","useState","filterText","setFilterText","sortBy","setSortBy","filteredActors","filter","toLowerCase","includes","sort","actor1","actor2","actorsCards","map","Container","Row","Form","Label","Control","type","placeholder","value","onChange","e","as","xs","md","lg","Spinner","animation","MovieCard","movie","MoviesPage","movies","filteredMovies","movie1","movie2","moviesCards","HomePage","App","setActors","setMovies","useEffect","actorsJson","plainActor","moviesJson","plainMovie","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ce8fcf2.chunk.js","sourcesContent":["class Actor {\r\n    constructor(firstName, lastName, birthday, image, imdbLink) {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.birthday = birthday;\r\n        this.image = image;\r\n        this.imdbLink = imdbLink; \r\n        this.age = this.calcAge(this.birthday);\r\n    }\r\n\r\n\r\n    calcAge(birthday) {\r\n        const currentYear = new Date().getFullYear();\r\n        const yearOfbirth = new Date(birthday).getFullYear();\r\n        return currentYear - yearOfbirth;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Actor;","class Movie {\r\n    constructor(movieName, lengthInMinutes, poster, director, mainStars) {\r\n        this.movieName = movieName;\r\n        this.lengthInMinutes = lengthInMinutes;\r\n        this.poster = poster;\r\n        this.director = director;\r\n        this.mainStars = mainStars; \r\n    }\r\n}\r\n\r\nexport default Movie;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './ActorCard.css';\r\n\r\nfunction ActorCard({ actor }) {\r\n\r\n    return (\r\n        <Card className = \"actor-card\">\r\n            <Card.Img className=\"actorImg\" variant=\"top\" src={actor.image} />\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <a className=\"imdbLink\" href={actor.imdbLink} target=\"_blank\">\r\n                        {actor.firstName} {actor.lastName}\r\n                    </a>\r\n                </Card.Title>\r\n                <Card.Text>Age: {actor.age}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ActorCard;\r\n","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport './Navbar.css';\r\n\r\n\r\nfunction MyNavbar(props) {\r\n   \r\n    return (\r\n        <Navbar className=\"my-navbar\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#/\">Movie App</Navbar.Brand>\r\n            <Nav className=\"mr-auto bg-dark\" >\r\n                {/* <Nav.Link href=\"/\">Home</Nav.Link> */}\r\n                <Nav.Link href=\"#/actors\">Actors</Nav.Link>\r\n                <Nav.Link href=\"#/movies\">Movies</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default MyNavbar;","import React, { useEffect, useState } from \"react\";\r\nimport Actor from \"../../model/ActorModel/ActorModel\";\r\nimport { Container, Row, Col, Form, Spinner } from 'react-bootstrap';\r\nimport ActorCard from \"../../components/ActorCard/ActorCard\";\r\nimport './ActorsPage.css';\r\nimport axios from \"axios\";\r\nimport img from '../../assets/images/BradleyCooper.jpg';\r\nimport actorsJson from '../../actors.json';\r\nimport MyNavbar from '../../components/Navbar/Navbar';\r\n\r\n\r\nfunction ActorsPage({actors}) {\r\n\r\n    const [filterText, setFilterText] = useState(\"\");\r\n\r\n    const [sortBy, setSortBy] = useState(\"firstName\");\r\n\r\n    // const [actors, setActors] = useState([]);\r\n\r\n    // //  AJAX call to JSON actors file\r\n    // useEffect(() => {\r\n\r\n    //     setActors(actorsJson.map(plainActor => new Actor(plainActor.firstName, plainActor.lastName, plainActor.birthday, plainActor.image, plainActor.imdbLink)));\r\n\r\n    //     // axios.get(\"actors.json\").then(response => {  \r\n    //     //     setActors(response.data.map(plainActor => new Actor(plainActor.firstName, plainActor.lastName, plainActor.birthday, plainActor.image, plainActor.imdbLink)));\r\n    //     // }).catch( error => {\r\n    //     //     console.error(error);\r\n    //     // })\r\n    // }, []);\r\n\r\n\r\n    // filtering actors\r\n    const filteredActors = actors.filter(actor => actor.firstName.toLowerCase().includes(filterText.toLowerCase()) || actor.lastName.toLowerCase().includes(filterText.toLowerCase()))\r\n\r\n    // sorting actors\r\n    filteredActors.sort((actor1, actor2) => {\r\n        if (actor1[sortBy] > actor2[sortBy]) {\r\n            return 1;\r\n        } else if (actor1[sortBy] < actor2[sortBy]) {\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    // actors for display \r\n    const actorsCards = filteredActors.map(actor => <ActorCard actor={actor} />);\r\n\r\n    return (\r\n        <div>\r\n            <MyNavbar />\r\n\r\n            <Container className=\"actors-container\">\r\n\r\n                <Row className=\"title\">\r\n                    <h1>Actors Gallery</h1>\r\n                </Row>\r\n                <Form>\r\n                    <Form.Row className=\"form-row\">\r\n                        <Form.Label className=\"label\">Search</Form.Label>\r\n                        <Form.Control type=\"text\" className=\"filter\" placeholder=\"Search...\" value={filterText} onChange={e => setFilterText(e.target.value)} />\r\n                        <Form.Label className=\"label\">Sort By</Form.Label>\r\n                        <Form.Control as=\"select\" className=\"sort\" value={sortBy} onChange={e => setSortBy(e.target.value)}>\r\n                            <option value=\"firstName\">First Name</option>\r\n                            <option value=\"lastName\">Last Name</option>\r\n                            <option value=\"age\">Age</option>\r\n                        </Form.Control>\r\n                    </Form.Row>\r\n                </Form>\r\n                {actors ?\r\n                    <Row className=\"cards-div\" xs={1} md={2} lg={5}>\r\n                        {actorsCards}\r\n                    </Row> :\r\n                    <Spinner animation=\"border\" />\r\n                }\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActorsPage;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './MovieCard.css';\r\n\r\nfunction MovieCard({ movie }) {\r\n\r\n    return (\r\n        // <Card className = \"movie-card\">\r\n        //     <Card.Img className=\"movieImg\" variant=\"left\" src={movie.poster} />    \r\n        //     <Card.Body>\r\n        //         <Card.Title>\r\n        //                 {movie.movieName}\r\n        //         </Card.Title>\r\n        //         <Card.Text>Length In MInutes: {movie.lengthInMinutes}</Card.Text>\r\n        //         <Card.Text>Director: {movie.director}</Card.Text>\r\n        //         <Card.Text>Main Stars: {movie.mainStars}</Card.Text>\r\n        //     </Card.Body>\r\n\r\n        // </Card>\r\n        <div className=\"movie-card\">\r\n            <img className=\"movieImg\" src={movie.poster} />\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title\">{movie.movieName}</h4>\r\n                <p><span className=\"bold\">Length In Minutes:</span> {movie.lengthInMinutes}</p>\r\n                <p><span className=\"bold\">Director:</span> {movie.director}</p>\r\n                <p><span className=\"bold\">Main Stars:</span> {movie.mainStars}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Form, Spinner } from 'react-bootstrap';\r\nimport './MoviesPage.css';\r\nimport axios from \"axios\";\r\nimport moviesJson from '../../movies.json';\r\nimport MovieCard from \"../../components/MovieCard/MovieCard\";\r\nimport Movie from \"../../model/MovieModel/MovieModel\";\r\nimport MyNavbar from '../../components/Navbar/Navbar';\r\n\r\n\r\nfunction MoviesPage({movies}) {\r\n\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [sortBy, setSortBy] = useState(\"movieName\");\r\n    // const [movies, setMovies] = useState([]);\r\n\r\n    // //  AJAX call to JSON movies file\r\n    // useEffect(() => {\r\n    //     setMovies(moviesJson.map(plainMovie => new Movie(plainMovie.movieName, plainMovie.lengthInMinutes, plainMovie.poster, plainMovie.director, plainMovie.mainStars)));\r\n    //     // axios.get(\"movies.json\").then(response => {  \r\n    //     //     setMovies(response.data.map(plainMovie => new Movie(plainMovie.movieName, plainMovie.lengthInMinutes, plainMovie.poster, plainMovie.director, plainMovie.mainStars)));\r\n    //     // }).catch( error => {\r\n    //     //     console.error(error);\r\n    //     // })\r\n    // }, []);\r\n\r\n    // filtering movies\r\n    const filteredMovies = movies.filter(movie => movie.movieName.toLowerCase().includes(filterText.toLowerCase()));\r\n\r\n    // sorting movies\r\n    filteredMovies.sort((movie1, movie2) => {\r\n        if (movie1[sortBy] > movie2[sortBy]) {\r\n            return 1;\r\n        } else if (movie1[sortBy] < movie2[sortBy]) {\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    // actors for display \r\n    const moviesCards = filteredMovies.map(movie => <MovieCard movie={movie} />);\r\n\r\n    return (\r\n        <div>\r\n            <MyNavbar />\r\n\r\n            <Container className=\"movies-container\">\r\n                <Row className=\"title\">\r\n                    <h1>Movies</h1>\r\n                </Row>\r\n                <Form>\r\n                    <Form.Row className=\"form-row\">\r\n                        <Form.Label className=\"label\">Search</Form.Label>\r\n                        <Form.Control type=\"text\" className=\"filter\" placeholder=\"Search...\" value={filterText} onChange={e => setFilterText(e.target.value)} />\r\n                        <Form.Label className=\"label\">Sort By</Form.Label>\r\n                        <Form.Control as=\"select\" className=\"sort\" value={sortBy} onChange={e => setSortBy(e.target.value)}>\r\n                            <option value=\"movieName\">Movie Name</option>\r\n                            <option value=\"director\">Director</option>\r\n                            <option value=\"mainStars\">Main Stars</option>\r\n                        </Form.Control>\r\n                    </Form.Row>\r\n                </Form>\r\n                {movies ?\r\n                    <Row className=\"cards-div\" xs={1} md={1} lg={1}>\r\n                        {moviesCards}\r\n                    </Row> :\r\n                    <Spinner animation=\"border\" />\r\n                }\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesPage;","import React from 'react';\r\nimport './HomePage.css';\r\nimport MyNavbar from '../../components/Navbar/Navbar';\r\nimport { Container , Row } from 'react-bootstrap';\r\n\r\nfunction HomePage(props) {\r\n    return (\r\n        <div className = \"homepage\">\r\n            <MyNavbar />\r\n            {/* <Container className=\"home-container\"> */}\r\n                    <h1>Welcome To Movie App </h1>\r\n             {/* </Container> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React, { useEffect, useState } from \"react\";\nimport Actor from \"../src/model/ActorModel/ActorModel\";\nimport Movie from \"../src/model/MovieModel/MovieModel\";\nimport logo from './logo.svg';\nimport './App.css';\nimport ActorsPage from './pages/ActorsPage/ActorsPage';\nimport MoviesPage from './pages/MoviesPage/MoviesPage';\nimport MyNavbar from './components/Navbar/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter, Route , Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport moviesJson from '../src/movies.json';\nimport actorsJson from '../src/actors.json';\n\n\nfunction App() {\n  const [actors, setActors] = useState([]);\n  const [movies, setMovies] = useState([]);\n\n\n  //  AJAX call to JSON actors file\n  useEffect(() => {\n\n      setActors(actorsJson.map(plainActor => new Actor(plainActor.firstName, plainActor.lastName, plainActor.birthday, plainActor.image, plainActor.imdbLink)));\n\n      // axios.get(\"actors.json\").then(response => {  \n      //     setActors(response.data.map(plainActor => new Actor(plainActor.firstName, plainActor.lastName, plainActor.birthday, plainActor.image, plainActor.imdbLink)));\n      // }).catch( error => {\n      //     console.error(error);\n      // })\n  }, []);\n\n  //  AJAX call to JSON movies file\n  useEffect(() => {\n      setMovies(moviesJson.map(plainMovie => new Movie(plainMovie.movieName, plainMovie.lengthInMinutes, plainMovie.poster, plainMovie.director, plainMovie.mainStars)));\n      // axios.get(\"movies.json\").then(response => {  \n      //     setMovies(response.data.map(plainMovie => new Movie(plainMovie.movieName, plainMovie.lengthInMinutes, plainMovie.poster, plainMovie.director, plainMovie.mainStars)));\n      // }).catch( error => {\n      //     console.error(error);\n      // })\n  }, []);\n\n\n  return (\n    <div>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/actors\">\n            <ActorsPage actors={actors}/>\n          </Route>\n          <Route exact path=\"/movies\">\n            <MoviesPage movies={movies}/>\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}